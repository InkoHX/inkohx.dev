---
import Hero from '../../components/Hero.astro'
import BaseLayout from '../../layouts/BaseLayout.astro'
import { createOpenGraphImagePath } from '../../lib/opengraph-image'
import Image from 'astro/components/Image.astro'
import { findArticles } from '../../lib/articles'

const articles = (await findArticles()).sort(
  (a, b) => new Date(b.data.publishedAt).getTime() - new Date(a.data.publishedAt).getTime(),
)
const dateTimeFormatter = new Intl.DateTimeFormat('ja-JP', {
  dateStyle: 'long',
})
---

<BaseLayout title="記事一覧 | 鳥頭" description="投稿記事の一覧、不定期で更新中">
  <Fragment slot="head">
    <meta property="og:type" content="website" />
  </Fragment>
  <div class="py-16">
    <Hero imageUrl="/img/undraw/blog-post.svg">
      <span slot="title">記事一覧</span>
      <span slot="subtitle">技術的なものを中心に、不定期で投稿中</span>
    </Hero>
    <main class="mt-16">
      <div class="container">
        <ul class="grid gap-8 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3">
          {
            articles.map((article) => (
              <li class="bg-slate-100 shadow-md rounded-lg hover:shadow-lg transition-shadow">
                <a href={`/articles/${article.id}`} class="block">
                  <Image
                    src={createOpenGraphImagePath(article.data.title, article.data.categories)}
                    alt=""
                    class="w-full h-full"
                    height="256"
                    width="512"
                  />
                  <h2 class="sr-only">{article.data.title}</h2>
                  <p class="p-4 text-slate-700">
                    <time datetime={article.data.publishedAt.toISOString()}>
                      {dateTimeFormatter.format(article.data.publishedAt)}
                    </time>
                    に投稿
                  </p>
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </main>
  </div>
</BaseLayout>
